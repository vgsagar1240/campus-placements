rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users: each user can read/write their own profile, employees can read all users
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'employee';
    }

    // Settings collection - allow public read, authenticated users can write (for invite codes)
    match /settings/{document} {
      allow read: if true; // Public read access for invite codes
      allow write: if request.auth != null;
    }

    // Drives collection - allow all reads, authenticated users can write
    match /drives/{driveId} {
      allow read: if true;
      allow write: if request.auth != null;

      // Resources subcollection
      match /resources/{resId} {
        allow read: if true;
        allow write: if request.auth != null;
      }
    }

    // Notices collection - allow all reads, authenticated users can write
    match /notices/{noticeId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Drive Applications - allow authenticated users to manage
    match /driveApplications/{appId} {
      allow read, write: if request.auth != null;
    }
    
    // Registrations collection - allow authenticated users to manage
    match /registrations/{regId} {
      allow read, write: if request.auth != null;
    }

    // Resume storage - users can manage their own resumes, employees can read all
    match /resumes/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'employee';
    }

    // Allow all users to read resume URLs (for applications)
    match /resumes/{allUsers}/{allPaths=**} {
      allow read: if request.auth != null;
    }

    // Coding Profiles - users can manage their own profiles
    match /codingProfiles/{document} {
      allow read, write: if request.auth != null;
    }

    // Daily Question Analytics
    match /dailyQuestionStats/{document} {
      allow read, write: if request.auth != null;
    }

    // User Activity Logs
    match /userActivity/{document} {
      allow read, write: if request.auth != null;
    }
  }
}
